
const { Events, AuditLogEvent, PermissionsBitField } = require('discord.js');
const { LOG_CHANNELS } = require('../config.js');
const { isWhitelisted } = require('../utils/whitelist');

const DELETION_THRESHOLD = 3;
const TIME_WINDOW = 10000;
const recentChannelDeletions = new Map();

module.exports = {
  name: Events.ChannelDelete,
  async execute(channel, client) {
    try {
      const auditLogs = await channel.guild.fetchAuditLogs({
        limit: 1,
        type: AuditLogEvent.ChannelDelete
      });

      const deletionLog = auditLogs.entries.first();
      if (!deletionLog) return;

      const { executor } = deletionLog;
      if (!executor || executor.id === client?.user?.id) return;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
      if (isWhitelisted(executor.id, channel.guild)) {
        console.log(`–ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${executor.tag} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)`);
        return;
      }

      const now = Date.now();
      if (!recentChannelDeletions.has(executor.id)) {
        recentChannelDeletions.set(executor.id, []);
      }

      const deletions = recentChannelDeletions.get(executor.id);
      deletions.push(now);

      const recentDeletions = deletions.filter(time => now - time < TIME_WINDOW);
      recentChannelDeletions.set(executor.id, recentDeletions);

      console.log(`–ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${executor.tag}. –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–π: ${recentDeletions.length}`);

      if (recentDeletions.length >= DELETION_THRESHOLD) {
        const member = await channel.guild.members.fetch(executor.id);
        
        const rolesToRemove = member.roles.cache.filter(role =>
          role.permissions.has(PermissionsBitField.Flags.Administrator) ||
          role.permissions.has(PermissionsBitField.Flags.ManageRoles) ||
          role.permissions.has(PermissionsBitField.Flags.ManageChannels)
        );

        await member.roles.remove(rolesToRemove);

        const logChannel = channel.guild.channels.cache.get(LOG_CHANNELS.moderation);
        if (logChannel) {
          await logChannel.send({
            embeds: [{
              title: 'üö® –°–∏—Å—Ç–µ–º–∞ –ê–Ω—Ç–∏-–ù—é–∫',
              description: `**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** ${executor.tag}\n**–î–µ–π—Å—Ç–≤–∏–µ:** –£–¥–∞–ª–∏–ª ${DELETION_THRESHOLD} –∫–∞–Ω–∞–ª–æ–≤ –∑–∞ ${TIME_WINDOW/1000} —Å–µ–∫—É–Ω–¥\n**–ù–∞–∫–∞–∑–∞–Ω–∏–µ:** –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏ —É–¥–∞–ª–µ–Ω—ã`,
              color: 0xFF0000,
              timestamp: new Date()
            }]
          });
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ channelDelete:', error);
    }
  }
};
